{
	"info": {
		"_postman_id": "fastapi-article-demo",
		"name": "FastAPI Article Demo",
		"description": "Comprehensive collection for testing FastAPI Article Demo endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "fastapi-article-demo"
	},
	"item": [
		{
			"name": "Health Check",
			"item": [
				{
					"name": "Root Endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login John Doe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"    pm.test(\"Token received\", function () {",
									"        pm.expect(jsonData.access_token).to.be.a('string');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "john@example.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password123",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Jane Smith",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const jsonData = pm.response.json();",
									"    pm.environment.set(\"access_token_jane\", jsonData.access_token);",
									"    pm.test(\"Token received\", function () {",
									"        pm.expect(jsonData.access_token).to.be.a('string');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "jane@example.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password456",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "invalid@example.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "wrongpassword",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get User by ID (John Doe)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID (Jane Smith)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const jsonData = pm.response.json();",
									"    pm.environment.set(\"new_user_id\", jsonData.id);",
									"    pm.test(\"User created successfully\", function () {",
									"        pm.expect(jsonData.id).to.be.a('number');",
									"        pm.expect(jsonData.name).to.eql('Test User');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"testuser@example.com\",\n    \"password\": \"testpassword123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Duplicate User (Should Fail)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Non-existent User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"999"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Items",
			"item": [
				{
					"name": "Get Item by ID (Laptop)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/items/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Item by ID (Mouse)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/items/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const jsonData = pm.response.json();",
									"    pm.environment.set(\"new_item_id\", jsonData.id);",
									"    pm.test(\"Item created successfully\", function () {",
									"        pm.expect(jsonData.id).to.be.a('number');",
									"        pm.expect(jsonData.name).to.eql('Test Item');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Item\",\n    \"description\": \"A test item for demonstration\",\n    \"price\": 99.99,\n    \"tax\": 9.99\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/items/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Duplicate Item (Should Fail)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Laptop\",\n    \"description\": \"Another laptop\",\n    \"price\": 999.99,\n    \"tax\": 99.99\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/items/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Non-existent Item",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/items/999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"999"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Background Tasks",
			"item": [
				{
					"name": "Execute Background Task",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/action/?user=john_doe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"action",
								""
							],
							"query": [
								{
									"key": "user",
									"value": "john_doe"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Execute Background Task for Jane",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tasks/action/?user=jane_smith",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tasks",
								"action",
								""
							],
							"query": [
								{
									"key": "user",
									"value": "jane_smith"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Protected Endpoints (Require Authentication)",
			"item": [
				{
					"name": "Get Current User (Protected)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Access Protected Endpoint Without Token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}
